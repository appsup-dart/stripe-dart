{"name":"Charge","qualifiedName":"stripe/stripe.Charge","comment":"<p><a href=\"https://stripe.com/docs/api/curl#charges\">Charges</a></p>","isAbstract":false,"superclass":"stripe/stripe.Resource","implements":[],"subclass":[],"variables":{"objectName":{"name":"objectName","qualifiedName":"stripe/stripe.Charge.objectName","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{"objectName":{"name":"objectName","qualifiedName":"stripe/stripe.Resource.objectName","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{"id":{"name":"id","qualifiedName":"stripe/stripe.Charge.id","comment":"","commentFrom":"stripe.Charge.id","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"livemode":{"name":"livemode","qualifiedName":"stripe/stripe.Charge.livemode","comment":"","commentFrom":"stripe.Charge.livemode","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"amount":{"name":"amount","qualifiedName":"stripe/stripe.Charge.amount","comment":"","commentFrom":"stripe.Charge.amount","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"captured":{"name":"captured","qualifiedName":"stripe/stripe.Charge.captured","comment":"","commentFrom":"stripe.Charge.captured","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"card":{"name":"card","qualifiedName":"stripe/stripe.Charge.card","comment":"","commentFrom":"stripe.Charge.card","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"stripe/stripe.Card","inner":[]}],"parameters":{},"annotations":[]},"created":{"name":"created","qualifiedName":"stripe/stripe.Charge.created","comment":"","commentFrom":"stripe.Charge.created","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.DateTime","inner":[]}],"parameters":{},"annotations":[]},"currency":{"name":"currency","qualifiedName":"stripe/stripe.Charge.currency","comment":"","commentFrom":"stripe.Charge.currency","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"paid":{"name":"paid","qualifiedName":"stripe/stripe.Charge.paid","comment":"","commentFrom":"stripe.Charge.paid","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"refunded":{"name":"refunded","qualifiedName":"stripe/stripe.Charge.refunded","comment":"","commentFrom":"stripe.Charge.refunded","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"refunds":{"name":"refunds","qualifiedName":"stripe/stripe.Charge.refunds","comment":"","commentFrom":"stripe.Charge.refunds","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"stripe/stripe.Refund","inner":[]}]}],"parameters":{},"annotations":[]},"amountRefunded":{"name":"amountRefunded","qualifiedName":"stripe/stripe.Charge.amountRefunded","comment":"","commentFrom":"stripe.Charge.amountRefunded","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"balanceTransaction":{"name":"balanceTransaction","qualifiedName":"stripe/stripe.Charge.balanceTransaction","comment":"","commentFrom":"stripe.Charge.balanceTransaction","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"balanceTransactionExpand":{"name":"balanceTransactionExpand","qualifiedName":"stripe/stripe.Charge.balanceTransactionExpand","comment":"","commentFrom":"stripe.Charge.balanceTransactionExpand","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"stripe/stripe.Balance","inner":[]}],"parameters":{},"annotations":[]},"customer":{"name":"customer","qualifiedName":"stripe/stripe.Charge.customer","comment":"","commentFrom":"stripe.Charge.customer","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"customerExpand":{"name":"customerExpand","qualifiedName":"stripe/stripe.Charge.customerExpand","comment":"","commentFrom":"stripe.Charge.customerExpand","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"stripe/stripe.Customer","inner":[]}],"parameters":{},"annotations":[]},"description":{"name":"description","qualifiedName":"stripe/stripe.Charge.description","comment":"","commentFrom":"stripe.Charge.description","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"dispute":{"name":"dispute","qualifiedName":"stripe/stripe.Charge.dispute","comment":"","commentFrom":"stripe.Charge.dispute","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"stripe/stripe.Dispute","inner":[]}],"parameters":{},"annotations":[]},"failureCode":{"name":"failureCode","qualifiedName":"stripe/stripe.Charge.failureCode","comment":"","commentFrom":"stripe.Charge.failureCode","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"failureMessage":{"name":"failureMessage","qualifiedName":"stripe/stripe.Charge.failureMessage","comment":"","commentFrom":"stripe.Charge.failureMessage","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"invoice":{"name":"invoice","qualifiedName":"stripe/stripe.Charge.invoice","comment":"","commentFrom":"stripe.Charge.invoice","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"invoiceExpand":{"name":"invoiceExpand","qualifiedName":"stripe/stripe.Charge.invoiceExpand","comment":"","commentFrom":"stripe.Charge.invoiceExpand","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"stripe/stripe.Invoice","inner":[]}],"parameters":{},"annotations":[]},"metadata":{"name":"metadata","qualifiedName":"stripe/stripe.Charge.metadata","comment":"","commentFrom":"stripe.Charge.metadata","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"statement_description":{"name":"statement_description","qualifiedName":"stripe/stripe.Charge.statement_description","comment":"","commentFrom":"stripe.Charge.statement_description","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"fromMap":{"name":"fromMap","qualifiedName":"stripe/stripe.Charge.Charge-fromMap","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"dataMap":{"name":"dataMap","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"retrieve":{"name":"retrieve","qualifiedName":"stripe/stripe.Charge.retrieve","comment":"<p><a href=\"https://stripe.com/docs/api/curl#retrieve_charge\">Retrieving a Charge</a></p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"stripe/stripe.Charge","inner":[]}]}],"parameters":{"id":{"name":"id","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"data":{"name":"data","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"refund":{"name":"refund","qualifiedName":"stripe/stripe.Charge.refund","comment":"<p><a href=\"https://stripe.com/docs/api/curl#refund_charge\">Refunding a Charge</a></p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"stripe/stripe.Charge","inner":[]}]}],"parameters":{"id":{"name":"id","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"amount":{"name":"amount","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"refundApplicationFee":{"name":"refundApplicationFee","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"capture":{"name":"capture","qualifiedName":"stripe/stripe.Charge.capture","comment":"<p><a href=\"https://stripe.com/docs/api/curl#charge_capture\">Capture a charge</a></p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"stripe/stripe.Charge","inner":[]}]}],"parameters":{"id":{"name":"id","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"amount":{"name":"amount","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"refundApplicationFee":{"name":"refundApplicationFee","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"list":{"name":"list","qualifiedName":"stripe/stripe.Charge.list","comment":"<p><a href=\"https://stripe.com/docs/api/curl#list_charges\">List all Charges</a></p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"stripe/stripe.ChargeCollection","inner":[]}]}],"parameters":{"created":{"name":"created","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"customer":{"name":"customer","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"limit":{"name":"limit","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"startingAfter":{"name":"startingAfter","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"endingBefore":{"name":"endingBefore","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"stripe/stripe.Charge.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>stripe/stripe.Charge.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"stripe/stripe.Charge.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"stripe/stripe.Charge.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>stripe/stripe.Charge.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>stripe/stripe.Charge.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"stripe/stripe.Charge.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"stripe/stripe.Charge.noSuchMethod","comment":"<p><a>stripe/stripe.Charge.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>stripe/stripe.Charge.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>stripe/stripe.Charge.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>stripe/stripe.Charge.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}
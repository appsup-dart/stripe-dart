{"name":"SubscriptionCreation","qualifiedName":"stripe/stripe.SubscriptionCreation","comment":"<p>Used to create a new <a>stripe/stripe.Subscription</a></p>","isAbstract":false,"superclass":"stripe/stripe.ResourceRequest","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{"plan=":{"name":"plan=","qualifiedName":"stripe/stripe.SubscriptionCreation.plan=","comment":"<p>The identifier of the plan to subscribe the customer to.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"plan":{"name":"plan","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"coupon=":{"name":"coupon=","qualifiedName":"stripe/stripe.SubscriptionCreation.coupon=","comment":"<p>The code of the coupon to apply to this subscription.\nA coupon applied to a subscription will only affect invoices created for\nthat particular subscription.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"coupon":{"name":"coupon","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"trialEnd=":{"name":"trialEnd=","qualifiedName":"stripe/stripe.SubscriptionCreation.trialEnd=","comment":"<p>UTC integer timestamp representing the end of the trial period the\ncustomer will get before being charged for the first time. If set,\ntrial_end will override the default trial period of the plan the customer\nis being subscribed to. The special value now can be provided to end the\ncustomer's trial immediately.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"trialEnd":{"name":"trialEnd","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"card=":{"name":"card=","qualifiedName":"stripe/stripe.SubscriptionCreation.card=","comment":"<p>The card can either be a token, like the ones returned by our Stripe.js,\nor a dictionary containing a user's credit card details\n(with the options shown below). You must provide a card if the customer\ndoes not already have a valid card attached, and you are subscribing the\ncustomer for a plan that is not free. Passing card will create a new card,\nmake it the customer default card, and delete the old customer default\nif one exists. If you want to add an additional card to use with\nsubscriptions, instead use the card creation API to add the card\nand then the customer update API to set it as the default.\nWhenever you attach a card to a customer, Stripe will automatically\nvalidate the card.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"card":{"name":"card","optional":false,"named":false,"default":false,"type":[{"outer":"stripe/stripe.CardCreation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"quantity=":{"name":"quantity=","qualifiedName":"stripe/stripe.SubscriptionCreation.quantity=","comment":"<p>The quantity you'd like to apply to the subscription you're creating.\nFor example, if your plan is $10/user/month, and your customer has\n5 users, you could pass 5 as the quantity to have the customer charged $50\n(5 x $10) monthly. If you update a subscription but don't change\nthe plan ID (e.g. changing only the trial_end), the subscription will\ninherit the old subscription's quantity attribute unless you pass\na new quantity parameter. If you update a subscription and change\nthe plan ID, the new subscription will not inherit the quantity attribute\nand will default to 1 unless you pass a quantity parameter.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"quantity":{"name":"quantity","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"applicationFeePercent=":{"name":"applicationFeePercent=","qualifiedName":"stripe/stripe.SubscriptionCreation.applicationFeePercent=","comment":"<p>A positive decimal (with at most two decimal places) between 1 and 100\nthat represents the percentage of the subscription invoice amount due\neach billing period (including any bundled invoice items) that will be\ntransferred to the application ownerâ€™s Stripe account.\nThe request must be made with an OAuth key in order to set an application\nfee percentage . For more information, see the application fees\ndocumentation.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"applicationFeePercent":{"name":"applicationFeePercent","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{},"constructors":{},"operators":{},"methods":{"create":{"name":"create","qualifiedName":"stripe/stripe.SubscriptionCreation.create","comment":"<p>Uses the values of <a>stripe/stripe.SubscriptionCreation</a> to send a request to the\nStripe API for the customer with <a>stripe/stripe.SubscriptionCreation.create.customerId</a>.\nReturns a <a>stripe/dart-async.Future</a> with a new <a>stripe/stripe.Subscription</a> from the response.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"stripe/stripe.Subscription","inner":[]}]}],"parameters":{"customerId":{"name":"customerId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"stripe/stripe.SubscriptionCreation.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>stripe/stripe.SubscriptionCreation.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"stripe/stripe.SubscriptionCreation.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"stripe/stripe.SubscriptionCreation.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>stripe/stripe.SubscriptionCreation.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>stripe/stripe.SubscriptionCreation.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"stripe/stripe.SubscriptionCreation.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"stripe/stripe.SubscriptionCreation.noSuchMethod","comment":"<p><a>stripe/stripe.SubscriptionCreation.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>stripe/stripe.SubscriptionCreation.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>stripe/stripe.SubscriptionCreation.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>stripe/stripe.SubscriptionCreation.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}
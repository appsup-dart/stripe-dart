{"name":"stripe","qualifiedName":"stripe/stripe","comment":"","variables":{"required":{"name":"required","qualifiedName":"stripe/stripe.required","comment":"<p>See <a>stripe/stripe.Required</a></p>","final":false,"static":false,"constant":true,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]}},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"SubscriptionCollection","qualifiedName":"stripe/stripe.SubscriptionCollection"},{"name":"SubscriptionCreation","qualifiedName":"stripe/stripe.SubscriptionCreation","preview":"<p>Used to create a new <a>stripe/stripe.Subscription</a></p>"},{"name":"Subscription","qualifiedName":"stripe/stripe.Subscription","preview":"<p>Subscriptions allow you to charge a customer's card on a recurring basis.\nA subscription ties a customer to a particular plan you've created.</p>"},{"name":"Refund","qualifiedName":"stripe/stripe.Refund","preview":"<p>Refunds can't be created by the library.</p>"},{"name":"NextRecurringCharge","qualifiedName":"stripe/stripe.NextRecurringCharge"},{"name":"Dispute","qualifiedName":"stripe/stripe.Dispute","preview":"<p>A dispute occurs when a customer questions your charge with their bank or\ncredit card company. When a customer disputes your charge, you're given the\nopportunity to respond to the dispute with evidence that shows the charge is\nlegitimate.</p>"},{"name":"PlanCollection","qualifiedName":"stripe/stripe.PlanCollection"},{"name":"PlanCreation","qualifiedName":"stripe/stripe.PlanCreation","preview":"<p>Used to create a new <a>stripe/stripe.Plan</a></p>"},{"name":"Plan","qualifiedName":"stripe/stripe.Plan","preview":"<p>A subscription plan contains the pricing information for different products\nand feature levels on your site. For example, you might have a $10/month\nplan for basic features and a different $20/month plan for premium features.</p>"},{"name":"InvoiceLineItemCollection","qualifiedName":"stripe/stripe.InvoiceLineItemCollection"},{"name":"Period","qualifiedName":"stripe/stripe.Period"},{"name":"InvoiceLineItem","qualifiedName":"stripe/stripe.InvoiceLineItem"},{"name":"Invoice","qualifiedName":"stripe/stripe.Invoice","preview":"<p>Invoices are statements of what a customer owes for a particular billing\nperiod, including subscriptions, invoice items, and any automatic proration\nadjustments if necessary.</p>"},{"name":"Discount","qualifiedName":"stripe/stripe.Discount","preview":"<p>A discount represents the actual application of a coupon to a particular\ncustomer. It contains information about when the discount began and when it\nwill end.</p>"},{"name":"CardCollection","qualifiedName":"stripe/stripe.CardCollection"},{"name":"CustomerCollection","qualifiedName":"stripe/stripe.CustomerCollection"},{"name":"CustomerUpdate","qualifiedName":"stripe/stripe.CustomerUpdate","preview":"<p>Used to update an existing <a>stripe/stripe.Customer</a></p>"},{"name":"CustomerCreation","qualifiedName":"stripe/stripe.CustomerCreation","preview":"<p>Used to create a new <a>stripe/stripe.Customer</a></p>"},{"name":"Customer","qualifiedName":"stripe/stripe.Customer","preview":"<p>Customer objects allow you to perform recurring charges and track multiple\ncharges that are associated with the same customer. The API allows you to\ncreate, delete, and update your customers. You can retrieve individual\ncustomers as well as a list of all your customers.</p>"},{"name":"CouponCollection","qualifiedName":"stripe/stripe.CouponCollection"},{"name":"CouponCreation","qualifiedName":"stripe/stripe.CouponCreation","preview":"<p>Used to create a <a>stripe/stripe.Coupon</a></p>"},{"name":"Coupon","qualifiedName":"stripe/stripe.Coupon","preview":"<p>A coupon contains information about a percent-off discount you might want to\napply to a customer.</p>"},{"name":"ChargeCollection","qualifiedName":"stripe/stripe.ChargeCollection"},{"name":"ChargeUpdate","qualifiedName":"stripe/stripe.ChargeUpdate","preview":"<p>Used to update an existing <a>stripe/stripe.Charge</a></p>"},{"name":"ChargeCreation","qualifiedName":"stripe/stripe.ChargeCreation","preview":"<p>Used to create <a>stripe/stripe.Charge</a></p>"},{"name":"Charge","qualifiedName":"stripe/stripe.Charge","preview":"<p>To charge a credit or a debit card, you create a new charge object.\nYou can retrieve and refund individual charges as well as list all charges.\nCharges are identified by a unique random ID.</p>"},{"name":"CardUpdate","qualifiedName":"stripe/stripe.CardUpdate","preview":"<p>Used to update an existing <a>stripe/stripe.Card</a>.</p>"},{"name":"CardCreationWithToken","qualifiedName":"stripe/stripe.CardCreationWithToken","preview":"<p>Used to create a <a>stripe/stripe.Card</a> with a token</p>"},{"name":"CardCreation","qualifiedName":"stripe/stripe.CardCreation","preview":"<p>Used to create a <a>stripe/stripe.Card</a></p>"},{"name":"Card","qualifiedName":"stripe/stripe.Card","preview":"<p>You can store multiple credit cards for a customer in order to charge the\ncustomer later.</p>"},{"name":"Fund","qualifiedName":"stripe/stripe.Fund"},{"name":"Balance","qualifiedName":"stripe/stripe.Balance","preview":"<p>This is an object representing your Stripe balance.\nYou can retrieve it to see the balance currently on your Stripe account.</p>"},{"name":"ApiResource","qualifiedName":"stripe/stripe.ApiResource","preview":"<p>ApiResources are resources that can be created and sent to the Stripe REST Api.</p>"},{"name":"ResourceCollection","qualifiedName":"stripe/stripe.ResourceCollection","preview":"<p>An abstract collection class that helps retrieving multiple elements of the\nsame resource.</p>"},{"name":"ResourceRequest","qualifiedName":"stripe/stripe.ResourceRequest","preview":"<p>The base class for request resources (eg: <a>stripe/stripe.CustomerCreation</a>,\n<a>stripe/stripe.CustomerUpdate</a>, etc...)</p>"},{"name":"Resource","qualifiedName":"stripe/stripe.Resource","preview":"<p>All objects sent through the Stripe REST API are <a>stripe/stripe.Resource</a>s, but only\n<a>stripe/stripe.ApiResource</a>s can be created, deleted, etc...</p>"},{"name":"Required","qualifiedName":"stripe/stripe.Required","preview":"<p>Used whenever a field of a resource is required</p>"},{"name":"StripeService","qualifiedName":"stripe/stripe.StripeService","preview":"<p>The service to communicate with the REST stripe API.</p>"}],"typedef":{},"error":[{"name":"BadRequestException","qualifiedName":"stripe/stripe.BadRequestException","preview":"<p>Invalid request errors arise when your request has invalid parameters.</p>"},{"name":"ApiErrorException","qualifiedName":"stripe/stripe.ApiErrorException","preview":"<p>API errors cover any other type of problem (e.g. a temporary problem with\nStripe's servers) and should turn up only very infrequently.</p>"},{"name":"CardErrorException","qualifiedName":"stripe/stripe.CardErrorException","preview":"<p>Card errors are the most common type of error you should expect to handle.\nThey result when the user enters a card that can't be charged for some reason.</p>"},{"name":"InvalidRequestErrorException","qualifiedName":"stripe/stripe.InvalidRequestErrorException","preview":"<p>Invalid request errors arise when your request has invalid parameters.</p>"},{"name":"StripeApiException","qualifiedName":"stripe/stripe.StripeApiException","preview":"<p>Exceptions thrown by Stripe</p>"},{"name":"InvalidDataReceivedException","qualifiedName":"stripe/stripe.InvalidDataReceivedException"}]},"packageName":"stripe","packageIntro":"<h1>Stripe Dart</h1>\n<p><a href=\"https://drone.io/github.com/enyo/stripe-dart/latest\">!<a href=\"https://drone.io/github.com/enyo/stripe-dart/status.png\">Build Status</a></a></p>\n<blockquote>\n<p>This library is not finished yet. <strong>Do not use.</strong>  \nIt will be ready to go in a few weeks.</p></blockquote>\n<p>Stripe API implemented in dart.</p>\n<p>Most of the model class documentations have been taken from the\n<a href=\"https://stripe.com/docs\">stripe documentation</a>.</p>\n<p>This implementation is based on the official Stripe Java and NodeJS API wrappers\nand written as a proper native dart library.</p>\n<h2>Usage</h2>\n<pre class=\"dart\"><code>import \"package:stripe/stripe.dart\";\n\nmain() {\n\n  StripeService.apiKey = \"sk_test_BQokikJOvBiI2HlWgH4olfQ2\";\n\n  var card = new CardCreation()\n      ..number = \"123123123\";\n\n  new CustomerCreation()\n      ..description = \"Customer for test@example.com\"\n      ..card = card\n      ..create()\n      .then((Customer customer) =&gt; print(customer))\n      .catchError((e) =&gt; handleError(e));\n\n}\n</code></pre>"}